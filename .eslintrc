{
	"settings": {
		"react": {
			"version": "detect"
		}
	},
	"env": {
		"browser": true,
		"es6": true,
		"node": true
	},
	"globals": {
		"JSX": true
	},
	"extends": [
		"plugin:@typescript-eslint/recommended",
		"plugin:react/recommended",
		"plugin:react/jsx-runtime",
		"prettier",
		"eslint:recommended",
		"plugin:prettier/recommended",
		"plugin:tailwindcss/recommended",
		"plugin:@next/next/recommended"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": ["./tsconfig.json"],
		"sourceType": "module"
	},
	"plugins": [
		"eslint-plugin-jsdoc",
		"@typescript-eslint",
		"unused-imports",
		"eslint-plugin-import",
		"tailwindcss"
	],
	"ignorePatterns": ["types.generated.ts"],
	"rules": {
		"graphql/template-strings/interpolation": "off",

		"@typescript-eslint/typedef": [
			"error",
			{
				"parameter": false,
				"propertyDeclaration": true
			}
		],
		"@typescript-eslint/explicit-module-boundary-types": 0,
		"@typescript-eslint/adjacent-overload-signatures": "error",
		"@typescript-eslint/array-type": [
			"error",
			{
				"default": "array"
			}
		],
		"@typescript-eslint/ban-types": [
			"error",
			{
				"types": {
					"Object": {
						"message": "Avoid using the `Object` type. Did you mean `object`?"
					},
					"Function": {
						"message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
					},
					"Boolean": {
						"message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
					},
					"Number": {
						"message": "Avoid using the `Number` type. Did you mean `number`?"
					},
					"String": {
						"message": "Avoid using the `String` type. Did you mean `string`?"
					},
					"Symbol": {
						"message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
					}
				}
			}
		],
		"@typescript-eslint/consistent-type-assertions": "error",
		"@typescript-eslint/dot-notation": "error",
		"@typescript-eslint/member-delimiter-style": [
			"off",
			{
				"multiline": {
					"delimiter": "none",
					"requireLast": true
				},
				"singleline": {
					"delimiter": "semi",
					"requireLast": false
				}
			}
		],

		"@typescript-eslint/naming-convention": "off",
		"@typescript-eslint/no-empty-function": "off",
		"@typescript-eslint/no-empty-interface": "error",
		"@typescript-eslint/no-explicit-any": "warn",
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-namespace": "error",
		"@typescript-eslint/no-parameter-properties": "off",
		"@typescript-eslint/no-this-alias": "error",
		"@typescript-eslint/no-unused-expressions": "error",
		"@typescript-eslint/no-use-before-define": "off",
		"@typescript-eslint/no-var-requires": "off",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-function-type": "error",
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"@typescript-eslint/semi": ["off", null],
		"@typescript-eslint/triple-slash-reference": [
			"error",
			{
				"path": "always",
				"types": "prefer-import",
				"lib": "always"
			}
		],
		"@typescript-eslint/unified-signatures": "error",
		"arrow-parens": ["off", "always"],
		"brace-style": ["off", "off"],
		"complexity": "off",
		"constructor-super": "error",
		"eqeqeq": ["error", "smart"],
		"guard-for-in": "error",
		"id-blacklist": "error",
		"id-match": "error",
		"import/no-extraneous-dependencies": "off",
		"import/no-internal-modules": "off",
		"import/order": [
			"error",
			{
				"groups": ["builtin", "external", "internal"],
				"pathGroups": [
					{
						"pattern": "react",
						"group": "external",
						"position": "before"
					}
				],
				"pathGroupsExcludedImportTypes": ["react"],
				"newlines-between": "always",
				"alphabetize": {
					// "order": "asc",
					"caseInsensitive": true
				}
			}
		],
		"jsdoc/check-alignment": "error",
		"jsdoc/check-indentation": "error",
		"jsdoc/newline-after-description": "off",
		"max-classes-per-file": ["error", 1],
		"no-bitwise": "error",
		"no-caller": "error",
		"no-cond-assign": "error",
		"no-debugger": "off",
		"no-duplicate-case": "error",
		"no-duplicate-imports": "error",
		"no-empty": "off",
		"no-eval": "error",
		"no-extra-bind": "error",
		"no-fallthrough": "off",
		"no-invalid-this": "off",
		"no-irregular-whitespace": "off",
		"no-new-func": "error",
		"no-new-wrappers": "error",
		"no-redeclare": "error",
		"no-return-await": "error",
		"no-sequences": "error",
		"no-shadow": [
			"off",
			{
				"hoist": "all"
			}
		],
		"no-sparse-arrays": "error",
		"no-template-curly-in-string": "error",
		"no-throw-literal": "error",
		"no-undef-init": "error",
		"no-underscore-dangle": ["error", { "allow": ["__typename"] }],
		"no-unsafe-finally": "error",
		"no-unused-labels": "error",
		"no-unused-vars": "off",
		"unused-imports/no-unused-imports-ts": "error",
		"unused-imports/no-unused-vars": [
			"warn",
			{ "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
		],
		"no-var": "error",
		"object-shorthand": "error",
		"one-var": ["error", "never"],
		"padding-line-between-statements": [
			"error",
			{
				"blankLine": "always",
				"prev": "*",
				"next": "return"
			}
		],
		"prefer-const": "error",
		"prefer-object-spread": "error",
		"radix": "warn",
		"react/jsx-curly-spacing": "off",
		"react/jsx-equals-spacing": "off",
		"react/jsx-wrap-multilines": "off",
		"react/jsx-uses-react": "off",
		"react/react-in-jsx-scope": "off",
		"space-in-parens": ["off", "never"],
		"spaced-comment": [
			"error",
			"always",
			{
				"markers": ["/"]
			}
		],
		"use-isnan": "error",
		"valid-typeof": "off",

		// eslint-plugin-react rules
		"react/jsx-key": ["error", { "checkFragmentShorthand": true, "checkKeyMustBeforeSpread": true }],
		"react/no-unescaped-entities": "off",
		"react/prop-types": "off",
		"react/no-unknown-property": "off",
		"react/display-name": "off",
		"react/function-component-definition": ["error", { "namedComponents": "arrow-function" }],
		"react/no-adjacent-inline-elements": "error"
	}
}
